@model WebDevFinal.Models.StudentClassroom

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>StudentClassroom</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentPersonal_idStudent)

        <div class="form-group">
            @Html.LabelFor(model => model.month_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.month_2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.month_2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.understanding_verbal_instruction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.understanding_verbal_instruction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.understanding_verbal_instruction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.classroom_assignment_completion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.classroom_assignment_completion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.classroom_assignment_completion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.organizational_skills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.organizational_skills, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.organizational_skills, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.getting_hw_to_and_from_school, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.getting_hw_to_and_from_school, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.getting_hw_to_and_from_school, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hw_completion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hw_completion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hw_completion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.relationship_with_peers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.relationship_with_peers, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.relationship_with_peers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.following_directions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.following_directions, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.following_directions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.disrupting_class, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.disrupting_class, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.disrupting_class, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.verbal_participation_in_class, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.verbal_participation_in_class, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.verbal_participation_in_class, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
